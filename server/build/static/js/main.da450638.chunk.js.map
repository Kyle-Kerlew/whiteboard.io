{"version":3,"sources":["components/socket/socket.js","components/toolbar/home.js","resources/svg/cross-icon.svg","resources/svg/link-icon.svg","resources/svg/zoom-in-icon.svg","resources/svg/zoom-out-icon.svg","components/svg/circle.js","components/toolbar/bottomtoolbar.js","components/toolbar/sidetoolbar.js","components/shared/linkShare.js","components/drawing/canvas.js","components/routing/router.js","App.js","reportWebVitals.js","components/navigation/navbar.js","index.js"],"names":["Socket","io","process","BASE_URL","Home","history","useHistory","useState","whiteboardCounter","setWhiteboardCounter","useEffect","emit","on","data","console","log","Container","className","fluid","style","fontSize","textAlign","verticalAlign","maxWidth","Button","onClick","whiteboardUuid","btoa","uuidv4","push","whiteboardId","alignSelf","variant","size","paddingTop","Circle","width","height","xmlns","cx","cy","r","stroke","strokeWidth","fill","BottomToolbar","mouseDown","id","setPaintSize","zoomIn","zoomOut","clearBoard","setIsPopupVisible","isPopupVisible","isActive","setIsActive","toolbarRef","createRef","prevMouseDown","useRef","current","opacity","setTimeout","display","ref","el","animation","onMouseEnter","onMouseLeave","src","ZoomInIcon","alt","ZoomOutIcon","CrossIcon","LinkIcon","SideToolbar","props","setColor","ShareLinkBox","text","setIsVisible","showSuccessToast","baseurl","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","margin","type","fullWidth","disabled","value","DialogActions","copyText","document","getElementById","copy","copyLink","color","Canvas","canvasRef","newData","setNewData","paintSize","setMouseDown","isToastVisible","setIsToastVisible","useRouteMatch","params","canvasId","points","prevX","prevY","isMobile","scale","xLeftView","yTopView","widthViewOriginal","heightViewOriginal","widthView","heightView","updateBoardManyPoints","context","_","isEmpty","i","length","moveTo","lineTo","setTransform","translate","beginPath","x","y","lineJoin","lineCap","lineWidth","strokeStyle","closePath","drawPoint","getContext","clearRect","handleWindowResize","handleKeyDown","e","ctrlKey","key","preventDefault","handleZoomIn","handleZoomOut","handleDrawPointMovement","touches","pageX","pageY","handleStartMovementDrawing","newDrawData","handleEndDrawing","zoom","X","Y","forEach","point","window","addEventListener","removeEventListener","onTouchStart","onTouchMove","onMouseDown","onMouseUp","onTouchEnd","onMouseMove","Snackbar","autoHideDuration","Alert","severity","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da450638.chunk.js","sourcesContent":["import {io} from 'socket.io-client';\r\n\r\nexport const Socket = io(process.env.BASE_URL);\r\n","import React, {useEffect, useState} from 'react';\r\nimport '../../styles/popover.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Socket} from '../socket/socket';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n    const [whiteboardCounter, setWhiteboardCounter] = useState(); //use cache\r\n\r\n    function createNewWhiteboard() {\r\n        const whiteboardUuid = btoa(uuidv4());\r\n        history.push(`/${whiteboardUuid}`);\r\n        Socket.emit('create-whiteboard', {\r\n            whiteboardId: whiteboardUuid,\r\n            data: []\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        Socket.emit(\"counterRequest\", null);\r\n        Socket.on(\"counter\", data => {\r\n            console.log(\"read counter\");\r\n            setWhiteboardCounter(data)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container className={'flex-container'} fluid>\r\n            <h1 style={{fontSize: '60px', textAlign: 'center', verticalAlign: 'top'}}>Whiteboard IO</h1>\r\n            <p style={{fontSize: '18px', textAlign: 'center', maxWidth: '490px'}}>\r\n                Whiteboard IO is an open source tool for collaborative drawing in real time. It\r\n                simplifies planning, instructing, and documenting.\r\n            </p>\r\n            <Button onClick={createNewWhiteboard} style={{alignSelf: 'center'}} variant=\"primary\" size=\"lg\">Let's\r\n                Start</Button>\r\n\r\n            <div style={{fontSize: '60px', paddingTop: '50px', textAlign: 'center', maxWidth: '490px'}}>\r\n                {whiteboardCounter}\r\n                <p style={{fontSize: '18px', textAlign: 'center', maxWidth: '490px'}}>Whiteboards have been created.</p>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/cross-icon.34bfe4e5.svg\";","export default __webpack_public_path__ + \"static/media/link-icon.b99979f6.svg\";","export default __webpack_public_path__ + \"static/media/zoom-in-icon.09ff13d6.svg\";","export default __webpack_public_path__ + \"static/media/zoom-out-icon.0a493555.svg\";","const Circle = ({width, height, onClick}) => {\r\n    return (\r\n        <svg onClick={onClick} width={width + 'px'} height={height + 'px'} xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx={`${width / 2}`} cy={`${height / 2}`} r={`${height/2 - 10}`} stroke=\"black\"\r\n                    strokeWidth=\"3\" fill=\"black\"/>\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\nexport default Circle;","import React, {createRef, useEffect, useRef, useState} from 'react';\r\nimport '../../styles/bottomtoolbar.css';\r\nimport CrossIcon from '../../resources/svg/cross-icon.svg'\r\nimport LinkIcon from '../../resources/svg/link-icon.svg'\r\nimport ZoomInIcon from '../../resources/svg/zoom-in-icon.svg'\r\nimport ZoomOutIcon from '../../resources/svg/zoom-out-icon.svg'\r\nimport Circle from \"../svg/circle\";\r\n\r\nconst BottomToolbar = ({mouseDown, id, setPaintSize, zoomIn, zoomOut, clearBoard, setIsPopupVisible, isPopupVisible}) => {\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n    const toolbarRef = createRef();\r\n    const prevMouseDown = useRef();\r\n    useEffect(() => prevMouseDown.current = mouseDown)\r\n\r\n    useEffect(() => {\r\n\r\n        if (mouseDown && toolbarRef.current.style.opacity === \"0\") {\r\n            setTimeout(() => {\r\n                if (toolbarRef.current)\r\n                    toolbarRef.current.style.display = \"none\";\r\n            }, 500);\r\n        } else {\r\n            toolbarRef.current.style.display = \"block\";\r\n        }\r\n    });\r\n\r\n    function getStyle() {\r\n        if (mouseDown) {\r\n            return {opacity: 0, animation: 'fadeOutComplete .5s forwards'}\r\n        }\r\n        if (prevMouseDown.current && !mouseDown) {\r\n            return {opacity: 0.5, animation: 'fadeInFromComplete .5s forwards'}\r\n        }\r\n        return !isActive ? {opacity: 0.5, animation: 'fadeOut .5s forwards'} : {\r\n            opacity: 1.0,\r\n            animation: 'fadeIn .5s forwards'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id={id} ref={el => toolbarRef.current = el} style={getStyle()} className=\"bottomtoolbar\"\r\n             onMouseEnter={() => setIsActive(true)} onMouseLeave={() => setIsActive(false)}>\r\n            <ul>\r\n                <li>\r\n                    <Circle onClick={() => setPaintSize(5)} width={25} height={25}/>\r\n                </li>\r\n                <li>\r\n                    <Circle onClick={() => setPaintSize(30)} width={50} height={50}/>\r\n                </li>\r\n                <li>\r\n                    <Circle onClick={() => setPaintSize(55)} width={75} height={75}/>\r\n                </li>\r\n                <div className=\"divider\"/>\r\n                <li>\r\n                    <img width={\"36px\"} height={\"36px\"} onClick={zoomIn} src={ZoomInIcon} alt={\"Zoom In\"}/>\r\n                </li>\r\n                <li>\r\n                    <img width={\"36px\"} height={\"36px\"} onClick={zoomOut} src={ZoomOutIcon} alt={\"Zoom Out\"}/>\r\n                </li>\r\n                <div className=\"divider\"/>\r\n\r\n                <li>\r\n                    <img width={\"36px\"} height={\"36px\"} onClick={clearBoard} src={CrossIcon} alt={\"Clear Board\"}/>\r\n                </li>\r\n                <li>\r\n                    <img width={\"36px\"} height={\"36px\"} onClick={() => setIsPopupVisible(true)} src={LinkIcon}\r\n                         alt=\"Get Share Link\"/>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomToolbar;","import React, {createRef, useEffect, useRef, useState} from 'react';\r\nimport '../../styles/sidetoolbar.css';\r\n\r\nconst SideToolbar = props => {\r\n    //todo: create a wrapper component as to not duplicate this code\r\n    const [isActive, setIsActive] = useState(false);\r\n    const prevMouseDown = useRef();\r\n    const toolbarRef = createRef();\r\n    useEffect(() => prevMouseDown.current = props.mouseDown)\r\n    useEffect(() => {\r\n\r\n        if (props.mouseDown && toolbarRef.current.style.opacity === \"0\") {\r\n            setTimeout(() => {\r\n                if (toolbarRef.current)\r\n                    toolbarRef.current.style.display = \"none\";\r\n            }, 500);\r\n        } else {\r\n            toolbarRef.current.style.display = \"block\";\r\n        }\r\n    });\r\n\r\n    function getStyle() {\r\n        if (props.mouseDown) {\r\n            return {opacity: 0, animation: 'fadeOutComplete .5s linear'}\r\n        }\r\n        if (prevMouseDown.current && !props.mouseDown) {\r\n            return {opacity: 0.5, animation: 'fadeInFromComplete .5s linear'}\r\n        }\r\n        return !isActive ? {opacity: 0.5, animation: 'fadeOut .5s linear'} : {\r\n            opacity: 1.0,\r\n            animation: 'fadeIn 1s linear'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={el => toolbarRef.current = el} style={getStyle()} className=\"sidetoolbar\"\r\n             onMouseEnter={() => setIsActive(true)} onMouseLeave={() => setIsActive(false)}>\r\n            <ul>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"black\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"black\" strokeWidth=\"3\" fill=\"black\"/>\r\n                    </svg>\r\n                </li>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"red\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"red\" strokeWidth=\"3\" fill=\"red\"/>\r\n                    </svg>\r\n                </li>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"blue\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"blue\" strokeWidth=\"3\" fill=\"blue\"/>\r\n                    </svg>\r\n                </li>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"cyan\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"cyan\" strokeWidth=\"3\" fill=\"cyan\"/>\r\n                    </svg>\r\n                </li>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"yellow\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"yellow\" strokeWidth=\"3\" fill=\"yellow\"/>\r\n                    </svg>\r\n                </li>\r\n                <li>\r\n                    <svg onClick={() => props.setColor(\"green\")} height=\"50\" width=\"50\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"green\" strokeWidth=\"3\" fill=\"green\"/>\r\n                    </svg>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideToolbar;","import React from 'react';\r\nimport '../../styles/shareLinkBox.css';\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nfunction ShareLinkBox({text, whiteboardId, setIsVisible, showSuccessToast}) {\r\n    const baseurl = `${process.env.BASE_URL}`;\r\n\r\n    function copyLink() {\r\n        const copyText = document.getElementById(\"value\");\r\n        copy(copyText.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={true} onClose={() => setIsVisible(false)} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Share With Your Friends</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {text}\r\n                </DialogContentText>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    type=\"text\"\r\n                    id={\"value\"}\r\n                    fullWidth\r\n                    disabled\r\n                    value={baseurl + whiteboardId}\r\n                />\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    copyLink();\r\n                    setIsVisible(false);\r\n                    showSuccessToast();\r\n                }} color=\"primary\">\r\n                    Copy\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ShareLinkBox;","import React, {createRef, useRef, useState, useEffect, useCallback} from 'react';\r\nimport _ from 'lodash';\r\nimport BottomToolbar from \"../toolbar/bottomtoolbar\";\r\nimport SideToolbar from \"../toolbar/sidetoolbar\";\r\nimport {Socket} from '../socket/socket';\r\nimport {useRouteMatch} from \"react-router-dom\";\r\nimport ShareLinkBox from \"../shared/linkShare\";\r\nimport '../../styles/shareLinkBox.css';\r\nimport {DialogContent, Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Canvas() {\r\n    //TODO: Cache points so we don't need to add all the data each time\r\n    //TODO: Can data be compressed upon sending to the browser foro performance boost?\r\n\r\n    const canvasRef = useRef();\r\n    const [newData, setNewData] = useState();\r\n    const [paintSize, setPaintSize] = useState(25);\r\n    const [mouseDown, setMouseDown] = useState(false);\r\n    const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n    const [isToastVisible, setIsToastVisible] = useState(false);\r\n    const [color, setColor] = useState('black');\r\n    const {canvasId: whiteboardId} = useRouteMatch(\"/:canvasId\").params;\r\n    const points = useRef([]);\r\n    const prevX = useRef();\r\n    const prevY = useRef();\r\n    const isMobile = useRef(false);\r\n    const scale = useRef(1);\r\n    const xLeftView = useRef(0);\r\n    const yTopView = useRef(0);\r\n    const widthViewOriginal = useRef(0);\r\n    const heightViewOriginal = useRef(0);\r\n    const widthView = useRef(widthViewOriginal.current);\r\n    const heightView = useRef(heightViewOriginal.current);\r\n\r\n    function updateBoardManyPoints(data, context) {\r\n        if (!_.isEmpty(data)) {\r\n            for (let i = 0; i < data.length; i++) {\r\n\r\n                const moveTo = data[i].moveTo;\r\n                const lineTo = data[i].lineTo;\r\n                context.setTransform(1, 0, 0, 1, 0, 0);\r\n                context.scale(canvasRef.current.width / widthView.current, canvasRef.current.height / heightView.current);\r\n                context.translate(-xLeftView.current, -yTopView.current);\r\n\r\n                context.beginPath();\r\n                context.moveTo(moveTo.x, moveTo.y);\r\n                context.lineTo(lineTo.x, lineTo.y);\r\n                context.lineJoin = 'round';\r\n                context.lineCap = 'round';\r\n                context.lineWidth = lineTo.size;\r\n                context.strokeStyle = lineTo.color;\r\n                context.stroke();\r\n                context.closePath();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function clearBoard() {\r\n        Socket.emit(\"empty-page\", whiteboardId);\r\n        setNewData([]);\r\n        points.current = [];\r\n    }\r\n\r\n    function drawPoint(data) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        if (!_.isEmpty(data)) {\r\n            const moveTo = data.moveTo;\r\n            const lineTo = data.lineTo;\r\n            context.scale(scale.current, scale.current);\r\n            context.beginPath();\r\n            context.moveTo(moveTo.x, moveTo.y);\r\n            context.lineTo(lineTo.x, lineTo.y);\r\n            context.lineJoin = 'round';\r\n            context.lineCap = 'round';\r\n            context.lineWidth = lineTo.size;\r\n            context.strokeStyle = lineTo.color;\r\n            context.stroke();\r\n            context.closePath();\r\n        } else {\r\n            context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        }\r\n    }\r\n\r\n    function handleWindowResize() {\r\n        const context = canvasRef.current.getContext('2d');\r\n        updateBoardManyPoints(points.current, context);\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        if (e.ctrlKey && e.key === '=') {\r\n            e.preventDefault(); //prevent browser from zooming normally\r\n            handleZoomIn();\r\n        }\r\n        if (e.ctrlKey && e.key === '-') {\r\n            e.preventDefault(); //prevent browser from zooming normally\r\n            handleZoomOut();\r\n        }\r\n    }\r\n\r\n    useEffect(() => drawPoint(newData), [newData]);\r\n    useEffect(() => {\r\n        const context = canvasRef.current.getContext('2d');\r\n\r\n\r\n        window.addEventListener('resize', handleWindowResize);\r\n        window.addEventListener('keydown', handleKeyDown)\r\n        Socket.emit(\"load-data\", {\r\n            whiteboardId: whiteboardId\r\n        });\r\n        Socket.on(\"data-loaded\", (data) => {\r\n            if (!_.isEmpty(data)) {\r\n                points.current = data;\r\n                updateBoardManyPoints(data, context);\r\n            }\r\n        });\r\n        Socket.on(\"empty-page-from-server\", () => setNewData([]));\r\n        Socket.on(\"drawing-data-from-server\", data => {\r\n            if (!_.isEmpty(data)) {\r\n                setNewData(data);\r\n                points.current.push(data);\r\n            }\r\n        })\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowResize);\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n        }\r\n\r\n    }, []);\r\n\r\n    function handleDrawPoint(e) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.beginPath();\r\n        prevX.current = e.pageX;\r\n        prevY.current = e.pageY;\r\n        context.moveTo(prevX.current, prevY.current);\r\n        context.lineTo(prevX.current + 1, prevY.current + 1);\r\n        context.lineJoin = 'round';\r\n        context.lineCap = 'round';\r\n        const newDrawData = ({\r\n            whiteboardId: whiteboardId,\r\n            lineTo: {\r\n                x: prevX.current + 1,\r\n                y: prevY.current + 1,\r\n                size: paintSize,\r\n                color: color\r\n            },\r\n            moveTo: {\r\n                x: prevX.current,\r\n                y: prevY.current\r\n            }\r\n        });\r\n\r\n        Socket.emit(\"drawing-data\", newDrawData);\r\n        points.current.push(newDrawData);\r\n        context.lineWidth = paintSize;\r\n        context.strokeStyle = color;\r\n        context.stroke();\r\n        context.closePath();\r\n\r\n    }\r\n\r\n    function handleDrawPointMovement(e) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        setMouseDown(true);\r\n        context.beginPath();\r\n\r\n        if (e.type === 'touchmove') {\r\n            isMobile.current = true;\r\n            prevX.current = e.touches[0].pageX;\r\n            prevY.current = e.touches[0].pageY;\r\n        } else {\r\n            isMobile.current = false;\r\n            prevX.current = e.pageX;\r\n            prevY.current = e.pageY;\r\n\r\n        }\r\n        context.moveTo(prevX, prevY);\r\n    }\r\n\r\n    function handleStartMovementDrawing(e) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        if (mouseDown) {\r\n            context.lineJoin = 'round';\r\n            context.lineCap = 'round';\r\n            context.lineWidth = paintSize;\r\n            context.strokeStyle = color;\r\n            if (e.type === \"touchmove\") {\r\n                context.lineTo(e.touches[0].pageX, e.touches[0].pageY); //this is where the mobile mouseCoords are stored for some reason\r\n                isMobile.current = true;\r\n            } else {\r\n                context.lineTo(e.pageX, e.pageY);\r\n                isMobile.current = false;\r\n            }\r\n            context.stroke();\r\n            const newDrawData = ({\r\n                whiteboardId: whiteboardId,\r\n                moveTo: {\r\n                    x: prevX.current,\r\n                    y: prevY.current,\r\n                },\r\n                lineTo: {\r\n                    x: e.pageX,\r\n                    y: e.pageY,\r\n                    size: paintSize,\r\n                    color: color\r\n\r\n                },\r\n            });\r\n\r\n            Socket.emit(\"drawing-data\", newDrawData);\r\n            points.current.push(newDrawData);\r\n            prevX.current = e.pageX;\r\n            prevY.current = e.pageY;\r\n        }\r\n    }\r\n\r\n    function handleEndDrawing(e) {\r\n        const context = canvasRef.current.getContext('2d');\r\n        setMouseDown(false);\r\n        context.closePath();\r\n    }\r\n\r\n    function zoom() {\r\n        let X = canvasRef.current.width / 2; //Canvas coordinates\r\n        let Y = canvasRef.current.height / 2;\r\n        let x = X / canvasRef.current.width * widthView.current + xLeftView.current;  // View coordinates\r\n        let y = Y / canvasRef.current.height * heightView.current + yTopView.current;\r\n        widthView.current *= scale.current;\r\n        heightView.current *= scale.current;\r\n        if (widthView.current > widthViewOriginal.current || heightView.current > heightViewOriginal.current) {\r\n            widthView.current = widthViewOriginal.current;\r\n            heightView.current = heightViewOriginal.current;\r\n            x = widthView / 2;\r\n            y = heightView / 2;\r\n        }\r\n        xLeftView.current = x - widthView / 2;\r\n        yTopView.current = y - heightView / 2;\r\n        points.current.forEach(point => {\r\n            point.moveTo.x *= scale.current;\r\n            point.moveTo.y *= scale.current;\r\n            point.lineTo.x *= scale.current;\r\n            point.lineTo.y *= scale.current;\r\n        })\r\n\r\n    }\r\n\r\n    function handleZoomIn() {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        scale.current = 1.5;\r\n        zoom();\r\n        updateBoardManyPoints(points.current, context);\r\n    }\r\n\r\n    function handleZoomOut() {\r\n        const context = canvasRef.current.getContext('2d');\r\n        context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        scale.current = 2 / 3;\r\n        zoom();\r\n        updateBoardManyPoints(points.current, context);\r\n    }\r\n\r\n    function showSuccessToast() {\r\n        setIsToastVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"canvas-container\">\r\n            {isPopupVisible &&\r\n            <div className={\"container\"}>\r\n                <ShareLinkBox whiteboardId={whiteboardId}\r\n                              setIsVisible={setIsPopupVisible}\r\n                              showSuccessToast={showSuccessToast}\r\n                              text={\"Copy this link to share and collaborate!\"}/>\r\n            </div>\r\n            }\r\n\r\n            <canvas onMouseLeave={() => setMouseDown(false)} id=\"drawing-board\" ref={(ref) => canvasRef.current = ref}\r\n                    onTouchStart={handleDrawPointMovement}\r\n                    onClick={handleDrawPoint}\r\n\r\n                    onTouchMove={handleStartMovementDrawing}\r\n                    onMouseDown={handleDrawPointMovement}\r\n                    onMouseUp={handleEndDrawing}\r\n                    onTouchEnd={handleEndDrawing}\r\n                    onMouseMove={handleStartMovementDrawing}\r\n                    width={2000}\r\n                    height={1500}\r\n            >\r\n                Please update your browser.\r\n            </canvas>\r\n            {isToastVisible &&\r\n            <Snackbar onClose={() => setIsToastVisible(false)} open={isToastVisible} autoHideDuration={6000}>\r\n                <Alert severity=\"success\">\r\n                    We've copied the link to your clipboard!\r\n                </Alert>\r\n            </Snackbar>}\r\n            <BottomToolbar mouseDown={mouseDown} drawPoint={drawPoint} setMouseDown={setMouseDown}\r\n                           setIsPopupVisible={setIsPopupVisible}\r\n                           setPaintSize={setPaintSize}\r\n                           clearBoard={clearBoard}\r\n                           zoomIn={handleZoomIn}\r\n                           zoomOut={handleZoomOut}\r\n                           id={'bottom-toolbar'}\r\n            />\r\n            <SideToolbar mouseDown={mouseDown} drawPoint={drawPoint} setMouseDown={setMouseDown} setColor={setColor}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Home from \"../toolbar/home\";\r\nimport Canvas from \"../drawing/canvas\";\r\n\r\nfunction Router() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/:canvasId\" component={Canvas}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport Router from \"./components/routing/router\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router/>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className='fixed-top'>\r\n            <Navbar.Brand href=\"/\">Whiteboard IO</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/globals.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"./components/navigation/navbar\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <NavBar/>\n                <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}